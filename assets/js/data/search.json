[
  
  {
    "title": "Volley - ভলি লাইব্রেরিতে রিকুয়েস্টের প্রকারভেদ এবং GET মেথডের ব্যবহার",
    "url": "/volley-request-types-and-get-method",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "ভলি লাইব্রেরিতে রিকুয়েস্টের প্রকারভেদ এবং GET মেথডের ব্যবহারভলি লাইব্রেরি অ্যান্ড্রয়েড অ্যাপে নেটওয়ার্ক রিকুয়েস্ট হ্যান্ডেল করার জন্য একটি শক্তিশালী লাইব্রেরি। এটি বিভিন্ন ধরনের রিকুয়েস্ট সাপোর্ট ক...",
    "content": "ভলি লাইব্রেরিতে রিকুয়েস্টের প্রকারভেদ এবং GET মেথডের ব্যবহারভলি লাইব্রেরি অ্যান্ড্রয়েড অ্যাপে নেটওয়ার্ক রিকুয়েস্ট হ্যান্ডেল করার জন্য একটি শক্তিশালী লাইব্রেরি। এটি বিভিন্ন ধরনের রিকুয়েস্ট সাপোর্ট করে, যেমন: GET, POST, PUT, DELETE, ইত্যাদি। এই গাইডে আমরা শুধুমাত্র GET মেথড নিয়ে আলোচনা করব এবং কখন কোন ধরনের রিকুয়েস্ট ব্যবহার করা উচিত তা বুঝব।GET মেথড কি?GET মেথড হল HTTP রিকুয়েস্টের একটি প্রকার যা সার্ভার থেকে ডেটা রিট্রিভ করার জন্য ব্যবহৃত হয়। এটি সাধারণত ডেটা রিড করার জন্য ব্যবহার করা হয় এবং এটি URL-এর মাধ্যমে ডেটা পাস করে। GET রিকুয়েস্টে ডেটা URL-এর সাথে কুয়েরি প্যারামিটার হিসেবে পাঠানো হয়।উদাহরণ:https://example.com/api/data?id=123&amp;name=testএখানে id=123 এবং name=test হল কুয়েরি প্যারামিটার।GET মেথডের ব্যবহার কখন করব?  ডেটা রিট্রিভ করার জন্য: যখন সার্ভার থেকে শুধুমাত্র ডেটা রিড (পড়া) করতে চাই, তখন GET মেথড ব্যবহার করা হয়।  সার্চ অপারেশন: সার্চ ফাংশনালিটি ইমপ্লিমেন্ট করার সময় GET মেথড ব্যবহার করা হয়।  প্যাজিনেশন: বড় ডেটা সেটকে পেজে ভাগ করে লোড করার সময় GET মেথড ব্যবহার করা হয়।  ইডেম্পোটেন্ট অপারেশন: GET রিকুয়েস্ট ইডেম্পোটেন্ট, অর্থাৎ একই রিকুয়েস্ট বারবার করলে সার্ভারের স্টেট পরিবর্তন হয় না।ভলি লাইব্রেরিতে GET রিকুয়েস্টের প্রকারভেদভলি লাইব্রেরিতে GET রিকুয়েস্টের জন্য নিম্নলিখিত ক্লাসগুলো ব্যবহার করা হয়:  StringRequest  JsonObjectRequest  JsonArrayRequest  ImageRequestএখন আমরা প্রতিটি টাইপের রিকুয়েস্ট নিয়ে বিস্তারিত আলোচনা করব।1. StringRequestStringRequest হল সবচেয়ে সহজ এবং সাধারণ রিকুয়েস্ট টাইপ। এটি সার্ভার থেকে স্ট্রিং ফরম্যাটে ডেটা রিট্রিভ করে।কখন ব্যবহার করব?  যখন সার্ভার থেকে সাধারণ টেক্সট বা স্ট্রিং ডেটা রিট্রিভ করতে চাই।উদাহরণ:String url = \"https://example.com/api/data\";StringRequest stringRequest = new StringRequest(Request.Method.GET, url,        new Response.Listener&lt;String&gt;() {            @Override            public void onResponse(String response) {                // সার্ভার থেকে রেসপন্স পেলে এই মেথড কল হবে                textView.setText(response);            }        },        new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                // কোনো এরর হলে এই মেথড কল হবে                textView.setText(\"Error: \" + error.getMessage());            }        });// রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুনRequestQueue queue = Volley.newRequestQueue(this);queue.add(stringRequest);2. JsonObjectRequestJsonObjectRequest হল JSON অবজেক্ট রিট্রিভ করার জন্য। এটি সার্ভার থেকে JSON ফরম্যাটে ডেটা রিট্রিভ করে।কখন ব্যবহার করব?  যখন সার্ভার থেকে JSON অবজেক্ট রিট্রিভ করতে চাই।উদাহরণ:String url = \"https://example.com/api/data\";JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null,        new Response.Listener&lt;JSONObject&gt;() {            @Override            public void onResponse(JSONObject response) {                // JSON অবজেক্ট রেসপন্স পেলে এই মেথড কল হবে                try {                    String name = response.getString(\"name\");                    int id = response.getInt(\"id\");                    textView.setText(\"Name: \" + name + \", ID: \" + id);                } catch (JSONException e) {                    e.printStackTrace();                }            }        },        new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                // কোনো এরর হলে এই মেথড কল হবে                textView.setText(\"Error: \" + error.getMessage());            }        });// রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুনRequestQueue queue = Volley.newRequestQueue(this);queue.add(jsonObjectRequest);3. JsonArrayRequestJsonArrayRequest হল JSON অ্যারে রিট্রিভ করার জন্য। এটি সার্ভার থেকে JSON অ্যারে ফরম্যাটে ডেটা রিট্রিভ করে।কখন ব্যবহার করব?  যখন সার্ভার থেকে JSON অ্যারে রিট্রিভ করতে চাই।উদাহরণ:String url = \"https://example.com/api/data\";JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(Request.Method.GET, url, null,        new Response.Listener&lt;JSONArray&gt;() {            @Override            public void onResponse(JSONArray response) {                // JSON অ্যারে রেসপন্স পেলে এই মেথড কল হবে                for (int i = 0; i &lt; response.length(); i++) {                    try {                        JSONObject jsonObject = response.getJSONObject(i);                        String name = jsonObject.getString(\"name\");                        int id = jsonObject.getInt(\"id\");                        Log.d(\"JSONArray\", \"Name: \" + name + \", ID: \" + id);                    } catch (JSONException e) {                        e.printStackTrace();                    }                }            }        },        new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                // কোনো এরর হলে এই মেথড কল হবে                textView.setText(\"Error: \" + error.getMessage());            }        });// রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুনRequestQueue queue = Volley.newRequestQueue(this);queue.add(jsonArrayRequest);4. ImageRequestImageRequest হল ইমেজ ডেটা রিট্রিভ করার জন্য। এটি সার্ভার থেকে ইমেজ ডেটা রিট্রিভ করে এবং ImageView-এ ডিসপ্লে করে।কখন ব্যবহার করব?  যখন সার্ভার থেকে ইমেজ ডেটা রিট্রিভ করতে চাই।উদাহরণ:String url = \"https://example.com/image.jpg\";ImageRequest imageRequest = new ImageRequest(url,        new Response.Listener&lt;Bitmap&gt;() {            @Override            public void onResponse(Bitmap response) {                // ইমেজ রেসপন্স পেলে এই মেথড কল হবে                imageView.setImageBitmap(response);            }        }, 0, 0, null, null,        new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                // কোনো এরর হলে এই মেথড কল হবে                textView.setText(\"Error: \" + error.getMessage());            }        });// রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুনRequestQueue queue = Volley.newRequestQueue(this);queue.add(imageRequest);সারমর্ম  GET মেথড সার্ভার থেকে ডেটা রিট্রিভ করার জন্য ব্যবহার করা হয়।  StringRequest: সাধারণ টেক্সট বা স্ট্রিং ডেটা রিট্রিভ করার জন্য।  JsonObjectRequest: JSON অবজেক্ট রিট্রিভ করার জন্য।  JsonArrayRequest: JSON অ্যারে রিট্রিভ করার জন্য।  ImageRequest: ইমেজ ডেটা রিট্রিভ করার জন্য।  এই গাইডটি অনুসরণ করে আপনি ভলি লাইব্রেরিতে GET মেথডের বিভিন্ন প্রকারভেদ এবং তাদের ব্যবহার শিখতে পারবেন।"
  },
  
  {
    "title": "Class 263- অ্যান্ড্রয়েড অ্যাপ থেকে MySQL ডেটাবেসে ডেটা ইনসার্ট করা (Volley StringRequest এবং PHP $_GET মেথড ব্যবহার করে)",
    "url": "/insert-data-volley-stringrequest-php-get-method",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "আসসালামু আলাইকুম! আজকের ক্লাসে আমরা শিখব কিভাবে অ্যান্ড্রয়েড অ্যাপ থেকে MySQL ডেটাবেসে ডেটা ইনসার্ট করতে হয়। আমরা Android Studio-তে একটি সহজ অ্যাপ তৈরি করব, যেখানে ইউজার তার নাম, মোবাইল নাম্বার এ...",
    "content": "আসসালামু আলাইকুম! আজকের ক্লাসে আমরা শিখব কিভাবে অ্যান্ড্রয়েড অ্যাপ থেকে MySQL ডেটাবেসে ডেটা ইনসার্ট করতে হয়। আমরা Android Studio-তে একটি সহজ অ্যাপ তৈরি করব, যেখানে ইউজার তার নাম, মোবাইল নাম্বার এবং ইমেইল দিয়ে সাবমিট করবে। এই ডেটা অ্যাপ থেকে সার্ভারে পাঠানো হবে, এবং সার্ভার PHP দিয়ে ডেটাবেসে স্টোর করবে।এই ক্লাসটি কমপ্লিট স্টেপ-বাই-স্টেপ গাইড হবে। চলুন শুরু করা যাক!প্রথমে জেনে নেই কেন এটি জরুরি?অ্যান্ড্রয়েড অ্যাপ থেকে ডেটা সার্ভারে পাঠানো এবং সেটি ডেটাবেসে স্টোর করা হল ওয়েব এবং মোবাইল অ্যাপ্লিকেশন ডেভেলপমেন্টের একটি মৌলিক ধারণা। উদাহরণস্বরূপ, আপনি যদি একটি রেজিস্ট্রেশন ফর্ম বানাতে চান, তাহলে ইউজারের ডেটা অ্যাপ থেকে সার্ভারে পাঠাতে হবে এবং সেটি ডেটাবেসে সেভ করতে হবে।আজকের ক্লাসে আমরা এই সিস্টেমটি বানাব।ধাপ ১: ডেটাবেস এবং PHP API তৈরি করাপ্রথমে আমাদের একটি MySQL ডেটাবেস এবং PHP API তৈরি করতে হবে।ডেটাবেস টেবিল তৈরি করা  phpMyAdmin ওপেন করুন।  নতুন ডেটাবেস তৈরি করুন। ডেটাবেসের নাম দিন my_database।  একটি টেবিল তৈরি করুন যার নাম হবে user_table। এই টেবিলে তিনটি কলাম থাকবে:          id (INT, Primary Key, Auto Increment)      name (VARCHAR(50))      email (VARCHAR(100))      mobile (VARCHAR(15))      PHP API তৈরি করাএখন আমরা একটি PHP স্ক্রিপ্ট তৈরি করব যেটি অ্যান্ড্রয়েড অ্যাপ থেকে ডেটা রিসিভ করবে এবং ডেটাবেসে ইনসার্ট করবে।নিচের কোডটি দেখুন:&lt;?php// ডেটাবেস কানেকশনের জন্য প্রয়োজনীয় তথ্য$servername = \"localhost\"; // সার্ভারের নাম$username = \"root\";        // ডেটাবেস ইউজারনেম$password = \"\";            // ডেটাবেস পাসওয়ার্ড (ডিফল্ট খালি)$dbname = \"my_database\";   // ডেটাবেসের নাম// কানেকশন তৈরি করা$conn = new mysqli($servername, $username, $password, $dbname);// কানেকশন চেক করাif ($conn-&gt;connect_error) {    die(\"Connection failed: \" . $conn-&gt;connect_error);}// URL থেকে ডেটা ক্যাচ করা$name = $_GET['name'];$email = $_GET['email'];$mobile = $_GET['mobile'];// ডেটা ইনসার্ট করার জন্য SQL কোয়েরি$sql = \"INSERT INTO user_table (name, email, mobile) VALUES ('$name', '$email', '$mobile')\";// কোয়েরি রান করাif ($conn-&gt;query($sql) === TRUE) {    echo \"New record created successfully\";} else {    echo \"Error: \" . $sql . \"&lt;br&gt;\" . $conn-&gt;error;}// কানেকশন ক্লোজ করা$conn-&gt;close();?&gt;ফাইল নাম: insert_data.phpলোকেশন: আপনার সার্ভারের ফোল্ডারে এই ফাইলটি রাখুন। উদাহরণস্বরূপ: http://localhost/insert_data.phpধাপ ২: Android Studio প্রজেক্ট সেটআপএখন আমরা Android Studio-তে একটি প্রজেক্ট তৈরি করব।নতুন প্রজেক্ট তৈরি করা  Android Studio ওপেন করুন।  “New Project” সিলেক্ট করুন।  প্রজেক্টের নাম দিন UserRegistrationApp।  ল্যাঙ্গুয়েজ হিসেবে Java সিলেক্ট করুন।UI ডিজাইন করাআমরা একটি সহজ UI ডিজাইন করব। এই অ্যাপে থাকবে:  তিনটি EditText (নাম, ইমেইল, মোবাইল নাম্বার ইনপুট নেওয়ার জন্য)।  একটি Button (ডেটা সাবমিট করার জন্য)।XML কোড (activity_main.xml):&lt;LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:orientation=\"vertical\"    android:padding=\"16dp\"&gt;    &lt;EditText        android:id=\"@+id/editTextName\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:hint=\"Enter Name\" /&gt;    &lt;EditText        android:id=\"@+id/editTextEmail\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:hint=\"Enter Email\"        android:inputType=\"textEmailAddress\" /&gt;    &lt;EditText        android:id=\"@+id/editTextMobile\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:hint=\"Enter Mobile Number\"        android:inputType=\"phone\" /&gt;    &lt;Button        android:id=\"@+id/buttonInsert\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:text=\"Insert Data\" /&gt;&lt;/LinearLayout&gt;ধাপ ৩: Volley Library যোগ করাVolley হল একটি পাওয়ারফুল লাইব্রেরি যা HTTP রিকোয়েস্ট পাঠানোর জন্য ব্যবহৃত হয়।  build.gradle (Module: app) ফাইলে নিচের লাইনটি যোগ করুন:    implementation 'com.android.volley:volley:1.2.1'        Sync Now করুন।ধাপ ৪: ডেটা সাবমিট করার জন্য Java কোডএখন আমরা Java কোড লিখব যেটি ইউজারের ডেটা নিবে এবং সার্ভারে পাঠাবে।MainActivity.java:package com.example.userregistrationapp;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;public class MainActivity extends AppCompatActivity {    EditText editTextName, editTextEmail, editTextMobile;    Button buttonInsert;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // ইউজার ইনপুট ফিল্ড এবং বাটন ইনিশিয়ালাইজ করা        editTextName = findViewById(R.id.editTextName);        editTextEmail = findViewById(R.id.editTextEmail);        editTextMobile = findViewById(R.id.editTextMobile);        buttonInsert = findViewById(R.id.buttonInsert);        // বাটনে ক্লিক লিসেনার যোগ করা        buttonInsert.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                // ইউজারের ইনপুট নেওয়া                String name = editTextName.getText().toString().trim();                String email = editTextEmail.getText().toString().trim();                String mobile = editTextMobile.getText().toString().trim();                // ডেটা সার্ভারে পাঠানো                sendDataToServer(name, email, mobile);            }        });    }    private void sendDataToServer(String name, String email, String mobile) {        // সার্ভারের URL        String url = \"http://192.168.1.100/insert_data.php?name=\" + name + \"&amp;email=\" + email + \"&amp;mobile=\" + mobile;        // Volley RequestQueue তৈরি করা        RequestQueue queue = Volley.newRequestQueue(this);        // StringRequest তৈরি করা        StringRequest stringRequest = new StringRequest(Request.Method.GET, url,                new Response.Listener&lt;String&gt;() {                    @Override                    public void onResponse(String response) {                        // সার্ভার থেকে রেসপন্স পেলে টোস্ট দেখানো                        Toast.makeText(MainActivity.this, response, Toast.LENGTH_LONG).show();                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        // এরর হলে টোস্ট দেখানো                        Toast.makeText(MainActivity.this, \"Error: \" + error.getMessage(), Toast.LENGTH_LONG).show();                    }                });        // রিকোয়েস্ট কিউতে যোগ করা        queue.add(stringRequest);    }}ধাপ ৫: অ্যাপ রান করা  অ্যাপটি রান করুন এবং ইউজার ইনপুট দিন।  Insert Data বাটনে ক্লিক করুন।  সার্ভারে ডেটা পাঠানো হবে এবং টোস্ট মেসেজ দেখাবে।শেষ কথাআজকের ক্লাসে আমরা শিখলাম কিভাবে অ্যান্ড্রয়েড অ্যাপ থেকে MySQL ডেটাবেসে ডেটা ইনসার্ট করতে হয়। আমরা Volley লাইব্রেরি ব্যবহার করে ডেটা সার্ভারে পাঠালাম এবং PHP দিয়ে ডেটাবেসে স্টোর করলাম।"
  },
  
  {
    "title": "Class 262- URL প্যারামিটারের মাধ্যমে ডেটা পাস করা এবং PHP $_GET মেথড দিয়ে ডেটা রিসিভ করা",
    "url": "/pass-data-by-url-parameter-and-receive-data-by-get-method",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "আসসালামু আলাইকুম! আজকের ক্লাসে আমরা শিখব কিভাবে URL-এর মাধ্যমে ডেটা পাঠানো যায় এবং PHP স্ক্রিপ্টে সেই ডেটা ক্যাচ করা যায়। এছাড়াও, আমরা একটি user_table তৈরি করব এবং সেখানে নাম, ইমেইল এবং মোবাইল ন...",
    "content": "আসসালামু আলাইকুম! আজকের ক্লাসে আমরা শিখব কিভাবে URL-এর মাধ্যমে ডেটা পাঠানো যায় এবং PHP স্ক্রিপ্টে সেই ডেটা ক্যাচ করা যায়। এছাড়াও, আমরা একটি user_table তৈরি করব এবং সেখানে নাম, ইমেইল এবং মোবাইল নম্বর ইনসার্ট করব। সবকিছু বাংলায় এবং কোড সহ ব্যাখ্যা করব। তাহলে চলুন শুরু করা যাক!ধাপ ১: URL প্যারামিটারের মাধ্যমে ডেটা পাঠানোURL প্যারামিটার হল একটি কী-ভ্যালু পেয়ার যা URL-এর শেষে ? চিহ্নের পর লেখা হয়। উদাহরণস্বরূপ:http://example.com/page.php?name=John&amp;email=john@example.com&amp;mobile=1234567890এখানে:  name=John: একটি কী-ভ্যালু পেয়ার। কী হল name, এবং ভ্যালু হল John।  email=john@example.com: আরেকটি কী-ভ্যালু পেয়ার।  mobile=1234567890: তৃতীয় কী-ভ্যালু পেয়ার।এই ডেটা পাঠানোর পর আমরা PHP স্ক্রিপ্টে এটি ক্যাচ করতে পারি।ধাপ ২: PHP $_GET মেথড দিয়ে ডেটা ক্যাচ করাPHP-তে $_GET মেথড ব্যবহার করে আমরা URL থেকে ডেটা রিসিভ করতে পারি। নিচের উদাহরণটি দেখুন:&lt;?php// URL থেকে ডেটা ক্যাচ করা$name = $_GET['name'];$email = $_GET['email'];$mobile = $_GET['mobile'];// ডেটা দেখানোecho \"Name: \" . $name . \"&lt;br&gt;\";echo \"Email: \" . $email . \"&lt;br&gt;\";echo \"Mobile: \" . $mobile . \"&lt;br&gt;\";?&gt;ব্যাখ্যা:  $_GET['name']: URL-এর name প্যারামিটারের ভ্যালু ক্যাচ করে।  $_GET['email']: URL-এর email প্যারামিটারের ভ্যালু ক্যাচ করে।  $_GET['mobile']: URL-এর mobile প্যারামিটারের ভ্যালু ক্যাচ করে।উদাহরণস্বরূপ, যদি আমরা নিচের URL ব্রাউজারে লিখি:http://localhost/page.php?name=John&amp;email=john@example.com&amp;mobile=1234567890তাহলে আউটপুট হবে:Name: JohnEmail: john@example.comMobile: 1234567890ধাপ ৩: ডেটা ইনসার্ট করা (user_table)এখন আমরা এই ডেটা ডেটাবেসে ইনসার্ট করব। আমরা একটি টেবিল তৈরি করব যার নাম হবে user_table। এই টেবিলে তিনটি কলাম থাকবে:  id (INT, Primary Key, Auto Increment)  name (VARCHAR(50))  email (VARCHAR(100))  mobile (VARCHAR(15))ডেটাবেস টেবিল তৈরি করাphpMyAdmin বা MySQL কমান্ড লাইন ব্যবহার করে নিচের কোয়েরি রান করুন:CREATE TABLE user_table (    id INT AUTO_INCREMENT PRIMARY KEY,    name VARCHAR(50),    email VARCHAR(100),    mobile VARCHAR(15));PHP স্ক্রিপ্ট লেখাএখন আমরা PHP স্ক্রিপ্ট লিখব যা URL থেকে ডেটা ক্যাচ করে ডেটাবেসে ইনসার্ট করব।&lt;?php// ডেটাবেস কানেকশন$servername = \"localhost\";$username = \"root\";$password = \"\";$dbname = \"my_database\";$conn = new mysqli($servername, $username, $password, $dbname);// কানেকশন চেক করাif ($conn-&gt;connect_error) {    die(\"Connection failed: \" . $conn-&gt;connect_error);}// URL থেকে ডেটা ক্যাচ করা$name = $_GET['name'];$email = $_GET['email'];$mobile = $_GET['mobile'];// ডেটা ইনসার্ট করার জন্য SQL কোয়েরি$sql = \"INSERT INTO user_table (name, email, mobile) VALUES ('$name', '$email', '$mobile')\";// কোয়েরি রান করাif ($conn-&gt;query($sql) === TRUE) {    echo \"New record created successfully!\";} else {    echo \"Error: \" . $sql . \"&lt;br&gt;\" . $conn-&gt;error;}// কানেকশন ক্লোজ করা$conn-&gt;close();?&gt;ব্যাখ্যা:  প্রথমে আমরা ডেটাবেসে কানেক্ট করছি।  তারপর URL থেকে $_GET মেথড ব্যবহার করে ডেটা ক্যাচ করছি।  সবশেষে ডেটা ডেটাবেসে ইনসার্ট করছি।উদাহরণস্বরূপ, যদি আমরা নিচের URL ব্রাউজারে লিখি:http://localhost/insert.php?name=John&amp;email=john@example.com&amp;mobile=1234567890তাহলে ডেটা ডেটাবেসে সেভ হবে, এবং পেজে “New record created successfully!” দেখাবে।শেষ কথাআজকের ক্লাসে আমরা শিখলাম কিভাবে URL প্যারামিটারের মাধ্যমে ডেটা পাঠানো যায় এবং PHP $_GET মেথড দিয়ে ডেটা ক্যাচ করা যায়। এছাড়াও, আমরা একটি ডেটাবেসে ডেটা ইনসার্ট করার উদাহরণ দেখলাম।"
  },
  
  {
    "title": "Class 260 & 261 - PHP দিয়ে MySQL ডেটাবেস কানেক্ট করা এবং কন্ডিশন চেক করা",
    "url": "/php-mysql-connect-and-condition-check",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "আসসালামু আলাইকুম! আজকের পোস্টে আমরা জানব কিভাবে PHP দিয়ে MySQL ডেটাবেস কানেক্ট করতে হয় এবং কিছু কন্ডিশন চেক করে স্টেট (state) বুঝার জন্য কোড লিখতে হয়। এটি একটি বিগিনার-ফ্রেন্ডলি টিউটোরিয়াল, তাই...",
    "content": "আসসালামু আলাইকুম! আজকের পোস্টে আমরা জানব কিভাবে PHP দিয়ে MySQL ডেটাবেস কানেক্ট করতে হয় এবং কিছু কন্ডিশন চেক করে স্টেট (state) বুঝার জন্য কোড লিখতে হয়। এটি একটি বিগিনার-ফ্রেন্ডলি টিউটোরিয়াল, তাই আপনি যদি নতুন হন তবেও সহজেই বুঝতে পারবেন। চলুন শুরু করা যাক!প্রথমে জেনে নেই কেন এটি জরুরি?PHP এবং MySQL একসাথে কাজ করলে আমরা ওয়েবসাইটে ডেটা স্টোর করতে পারি, ডেটা রিট্রিভ করতে পারি, এবং অনেক ধরনের অপারেশন করতে পারি। উদাহরণস্বরূপ, আপনি যদি একটি লগইন সিস্টেম বানাতে চান, তাহলে আপনার ডেটাবেসে স্টোর করা ইউজারের ইনফরমেশন ব্যবহার করে লগইন চেক করতে হবে। এখানে PHP এবং MySQL এর কানেকশন খুবই গুরুত্বপূর্ণ।ধাপ ১: ডেটাবেস তৈরি করাপ্রথমে আমাদের একটি MySQL ডেটাবেস তৈরি করতে হবে। আমরা একটি সাধারণ ডেটাবেস তৈরি করব যেটি ইউজারের নাম এবং ইমেইল স্টোর করবে।  phpMyAdmin ওপেন করুন।  নতুন ডেটাবেস তৈরি করুন। ডেটাবেসের নাম দিন my_database।  একটি টেবিল তৈরি করুন যার নাম হবে users। এই টেবিলে দুটি কলাম থাকবে:          id (INT, Primary Key, Auto Increment)      name (VARCHAR(50))      email (VARCHAR(100))      এখন আমাদের ডেটাবেস রেডি! এখন আমরা PHP দিয়ে এই ডেটাবেসে কানেক্ট করব।ধাপ ২: PHP দিয়ে MySQL ডেটাবেস কানেক্ট করাPHP দিয়ে MySQL ডেটাবেসে কানেক্ট করার জন্য আমরা mysqli ব্যবহার করব। এটি একটি সহজ এবং সিকিউর উপায়।নিচের কোডটি দেখুন:&lt;?php// ডেটাবেস কানেকশনের জন্য প্রয়োজনীয় তথ্য$servername = \"localhost\"; // সার্ভারের নাম$username = \"root\";        // ডেটাবেস ইউজারনেম$password = \"\";            // ডেটাবেস পাসওয়ার্ড (ডিফল্ট খালি)$dbname = \"my_database\";   // ডেটাবেসের নাম// কানেকশন তৈরি করা$conn = new mysqli($servername, $username, $password, $dbname);// কানেকশন চেক করাif ($conn-&gt;connect_error) {    die(\"Connection failed: \" . $conn-&gt;connect_error);}echo \"Connected successfully!\";?&gt;ব্যাখ্যা:  $servername: আপনার সার্ভারের নাম। লোকালহোস্টে থাকলে localhost দিন।  $username: ডেটাবেসের ইউজারনেম। ডিফল্ট হল root।  $password: ডেটাবেসের পাসওয়ার্ড। লোকালহোস্টে থাকলে এটি খালি থাকে।  $dbname: আপনার ডেটাবেসের নাম।যদি কানেকশন সফল হয়, তাহলে পেজে “Connected successfully!” দেখাবে। না হলে এরর মেসেজ দেখাবে।ধাপ ৩: কিছু ডেটা ইনসার্ট করাএখন আমরা ডেটাবেসে কিছু ডেটা ইনসার্ট করব। নিচের কোডটি দেখুন:&lt;?php// ডেটাবেস কানেকশন কোড এখানে থাকবে (উপরের কোড)// ডেটা ইনসার্ট করার জন্য SQL কোয়েরি$sql = \"INSERT INTO users (name, email) VALUES ('John Doe', 'john@example.com')\";// কোয়েরি রান করাif ($conn-&gt;query($sql) === TRUE) {    echo \"New record created successfully\";} else {    echo \"Error: \" . $sql . \"&lt;br&gt;\" . $conn-&gt;error;}// কানেকশন ক্লোজ করা$conn-&gt;close();?&gt;এই কোডটি রান করলে আপনার ডেটাবেসে একটি নতুন ইউজারের ডেটা স্টোর হবে।ধাপ ৪: কন্ডিশন চেক করাএখন আমরা ডেটাবেস থেকে ডেটা রিট্রিভ করব এবং কিছু কন্ডিশন চেক করব। উদাহরণস্বরূপ, আমরা একটি ইমেইল দিয়ে চেক করব যে এই ইমেইল ডেটাবেসে আছে কিনা।&lt;?php// ডেটাবেস কানেকশন কোড এখানে থাকবে (উপরের কোড)// ইমেইল চেক করার জন্য SQL কোয়েরি$email = \"john@example.com\"; // যে ইমেইল চেক করবেন$sql = \"SELECT * FROM users WHERE email='$email'\";$result = $conn-&gt;query($sql);if ($result-&gt;num_rows &gt; 0) {    // যদি ডেটা পাওয়া যায়    echo \"User found!\";} else {    // যদি ডেটা না পাওয়া যায়    echo \"User not found!\";}// কানেকশন ক্লোজ করা$conn-&gt;close();?&gt;ব্যাখ্যা:  $email ভেরিয়েবলে আমরা যে ইমেইল চেক করতে চাই সেটি দিব।  SELECT * FROM users WHERE email='$email' কোয়েরিটি ডেটাবেসে ঐ ইমেইল সার্চ করবে।  যদি কোন ডেটা পাওয়া যায় (num_rows &gt; 0), তাহলে “User found!” দেখাবে। না হলে “User not found!” দেখাবে।শেষ কথাআজকের টিউটোরিয়ালে আমরা শিখলাম কিভাবে PHP দিয়ে MySQL ডেটাবেস কানেক্ট করতে হয় এবং কিছু কন্ডিশন চেক করতে হয়। এটি শুধু একটি বেসিক টিউটোরিয়াল। আপনি চাইলে এই জ্ঞান ব্যবহার করে আরও জটিল প্রজেক্ট করতে পারেন।"
  },
  
  {
    "title": "Class 256 & 257- একটি পূর্ণাঙ্গ অ্যান্ড্রয়েড অ্যাপ তৈরি করা - JSON পার্সিং এবং ListView ব্যবহার করে",
    "url": "/json-parse-listview",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "আজকে আমরা একটি পূর্ণাঙ্গ অ্যান্ড্রয়েড অ্যাপ তৈরি করব, যেখানে আমরা সার্ভার থেকে JSON ডেটা পার্স করব এবং সেই ডেটা দিয়ে একটি ListView তৈরি করব। আমরা ArrayList, HashMap, JSONArray, এবং JSONObject ব্য...",
    "content": "আজকে আমরা একটি পূর্ণাঙ্গ অ্যান্ড্রয়েড অ্যাপ তৈরি করব, যেখানে আমরা সার্ভার থেকে JSON ডেটা পার্স করব এবং সেই ডেটা দিয়ে একটি ListView তৈরি করব। আমরা ArrayList, HashMap, JSONArray, এবং JSONObject ব্যবহার করব। এছাড়াও আমরা Volley লাইব্রেরি ব্যবহার করে ডেটা ফেচ করব। সবকিছু বাংলায় ব্যাখ্যা করা হবে এবং কোডের উদাহরণ দেওয়া হবে।প্রথমে আমাদের JSON ডেটা দেখে নেই:{    \"videoTitle\": \"Add Demo Title 1\",    \"videoID\": \"12345\"}এই JSON ডেটা আমরা সার্ভার থেকে পাব। এখানে দুটি কী আছে: videoTitle এবং videoID। আমাদের কাজ হল এই ডেটা পার্স করে একটি ListView-এ দেখানো।ধাপ ১: প্রজেক্ট সেটআপপ্রথমে Android Studio ওপেন করে একটি নতুন প্রজেক্ট তৈরি করুন। প্রজেক্টের নাম দিন JSONParsingApp।ধাপ ২: Gradle ফাইলে Volley লাইব্রেরি যোগ করাVolley লাইব্রেরি ব্যবহার করে আমরা সার্ভার থেকে ডেটা ফেচ করব। এজন্য build.gradle ফাইলে নিচের লাইনটি যোগ করুন:implementation 'com.android.volley:volley:1.2.1'এরপর Sync Now করুন।ধাপ ৩: লেআউট ফাইল তৈরি করা (activity_main.xml)এখন আমরা activity_main.xml ফাইলে একটি ListView যোগ করব।&lt;LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:orientation=\"vertical\"&gt;    &lt;ListView        android:id=\"@+id/listView\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\" /&gt;&lt;/LinearLayout&gt;ধাপ ৪: কাস্টম লেআউট তৈরি করা (list_item.xml)এখন আমরা একটি কাস্টম লেআউট তৈরি করব, যা ListView-এর প্রতিটি আইটেমের জন্য ব্যবহার করা হবে। এটি দেখতে এমন হবে:&lt;LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"wrap_content\"    android:orientation=\"vertical\"    android:padding=\"10dp\"&gt;    &lt;TextView        android:id=\"@+id/titleTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"Title\"        android:textSize=\"18sp\"        android:textStyle=\"bold\" /&gt;    &lt;TextView        android:id=\"@+id/idTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"ID\"        android:textSize=\"14sp\" /&gt;&lt;/LinearLayout&gt;ধাপ ৫: BaseAdapter তৈরি করা (CustomAdapter.java)এখন আমরা একটি BaseAdapter তৈরি করব, যা ListView-এ ডেটা দেখানোর জন্য ব্যবহার করা হবে।import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.TextView;import java.util.ArrayList;import java.util.HashMap;public class CustomAdapter extends BaseAdapter {    private Context context;    private ArrayList&lt;HashMap&lt;String, String&gt;&gt; dataList;    public CustomAdapter(Context context, ArrayList&lt;HashMap&lt;String, String&gt;&gt; dataList) {        this.context = context;        this.dataList = dataList;    }    @Override    public int getCount() {        return dataList.size();    }    @Override    public Object getItem(int position) {        return null;    }    @Override    public long getItemId(int position) {        return 0;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        if (convertView == null) {            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            convertView = inflater.inflate(R.layout.list_item, null);        }        TextView titleTextView = convertView.findViewById(R.id.titleTextView);        TextView idTextView = convertView.findViewById(R.id.idTextView);        HashMap&lt;String, String&gt; data = dataList.get(position);        titleTextView.setText(data.get(\"videoTitle\"));        idTextView.setText(data.get(\"videoID\"));        return convertView;    }}ধাপ ৬: MainActivity.java তে কোড লেখাএখন আমরা MainActivity.java ফাইলে কোড লিখব। এখানে আমরা Volley ব্যবহার করে সার্ভার থেকে ডেটা ফেচ করব এবং ListView-এ দেখাব।import android.os.Bundle;import android.widget.ListView;import android.widget.Toast;import androidx.appcompat.app.AppCompatActivity;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonArrayRequest;import com.android.volley.toolbox.Volley;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;public class MainActivity extends AppCompatActivity {    private ListView listView;    private ArrayList&lt;HashMap&lt;String, String&gt;&gt; dataList;    private CustomAdapter adapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        listView = findViewById(R.id.listView);        dataList = new ArrayList&lt;&gt;();        adapter = new CustomAdapter(this, dataList);        listView.setAdapter(adapter);        fetchDataFromServer();    }    private void fetchDataFromServer() {        String url = \"https://example.com/api/videos\"; // আপনার API URL দিন        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(Request.Method.GET, url, null,                new Response.Listener&lt;JSONArray&gt;() {                    @Override                    public void onResponse(JSONArray response) {                        try {                            for (int i = 0; i &lt; response.length(); i++) {                                JSONObject jsonObject = response.getJSONObject(i);                                String videoTitle = jsonObject.getString(\"videoTitle\");                                String videoID = jsonObject.getString(\"videoID\");                                HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();                                map.put(\"videoTitle\", videoTitle);                                map.put(\"videoID\", videoID);                                dataList.add(map);                            }                            adapter.notifyDataSetChanged();                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Toast.makeText(MainActivity.this, \"Error: \" + error.getMessage(), Toast.LENGTH_SHORT).show();                    }                });        RequestQueue requestQueue = Volley.newRequestQueue(this);        requestQueue.add(jsonArrayRequest);    }}ধাপ ৭: অ্যাপ রান করাএখন আপনার অ্যাপ রান করুন। সার্ভার থেকে ডেটা ফেচ হবে এবং ListView-এ দেখানো হবে।শেষ কথাআজকের টিউটোরিয়ালে আমরা দেখেছি কিভাবে সার্ভার থেকে JSON ডেটা ফেচ করে ListView-এ দেখানো যায়। এখানে আমরা ArrayList, HashMap, JSONArray, JSONObject, এবং Volley লাইব্রেরি ব্যবহার করেছি। আশা করি টিউটোরিয়ালটি আপনার কাজে লাগবে। যদি কোন প্রশ্ন থাকে, তাহলে কমেন্ট করুন।  Class 258_1: Complex JSON Parsing (Part 1)  &amp; Class 258_2: Complex JSON Parsing (Part 2)এই দুইটি ক্লাস প্র্যাকটিক্যালভাবে কাজ করতে হবে।"
  },
  
  {
    "title": "Class 255- Android-এ JSONArray Request এবং ডেটা পার্স করা",
    "url": "/android-array-request",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "আজকের পোস্টে আমরা দেখব কিভাবে Android Studio-তে Java ব্যবহার করে JSONArray রিকোয়েস্ট করা যায়, সার্ভার থেকে ডেটা পার্স (Parse) করা যায়, এবং সেই ডেটা ব্যবহার করে একটি TextView-এ সেট করা যায়। আমরা...",
    "content": "আজকের পোস্টে আমরা দেখব কিভাবে Android Studio-তে Java ব্যবহার করে JSONArray রিকোয়েস্ট করা যায়, সার্ভার থেকে ডেটা পার্স (Parse) করা যায়, এবং সেই ডেটা ব্যবহার করে একটি TextView-এ সেট করা যায়। আমরা Volley Library ব্যবহার করব এই কাজটি করার জন্য।শুরুতে কিছু মৌলিক ধারণা1. JSONArray কী?JSONArray হল একটি JSON অবজেক্ট যা অ্যারে আকারে ডেটা সংরক্ষণ করে। উদাহরণস্বরূপ:[    {\"id\": 1, \"name\": \"John\"},    {\"id\": 2, \"name\": \"Jane\"}]2. Volley Library কী?Volley হল একটি HTTP লাইব্রেরি যা আমাদের সার্ভারের সাথে ডেটা আদান-প্রদান করতে সাহায্য করে। এটি খুব সহজ এবং দ্রুত কাজ করে।প্রয়োজনীয় স্টেপসমূহস্টেপ ১: Android Studio প্রজেক্ট তৈরি করুন  Android Studio ওপেন করুন।  File &gt; New &gt; New Project সিলেক্ট করুন।  একটি নতুন প্রজেক্ট তৈরি করুন। নাম দিন, যেমন: JSONArrayExample.স্টেপ ২: Volley Library যোগ করুন  build.gradle (Module) ফাইল ওপেন করুন।  নিচের লাইনটি dependencies সেকশনে যোগ করুন:    implementation 'com.android.volley:volley:1.2.1'        Sync Now ক্লিক করুন।স্টেপ ৩: লেআউট ফাইল তৈরি করুন  res/layout/activity_main.xml ফাইল ওপেন করুন।  নিচের কোডটি যোগ করুন:&lt;LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:orientation=\"vertical\"    android:padding=\"16dp\"&gt;    &lt;Button        android:id=\"@+id/btnFetchData\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"Fetch Data\" /&gt;    &lt;TextView        android:id=\"@+id/tvResult\"        android:layout_width=\"match_parent\"        android:layout_height=\"wrap_content\"        android:layout_marginTop=\"16dp\"        android:text=\"Result will be shown here\"        android:textSize=\"18sp\" /&gt;&lt;/LinearLayout&gt;এখানে একটি বাটন এবং একটি টেক্সটভিউ আছে। বাটনে ক্লিক করলে ডেটা ফেচ করা হবে এবং টেক্সটভিউতে ডেটা দেখানো হবে।স্টেপ ৪: MainActivity.java কোড লিখুন  MainActivity.java ফাইল ওপেন করুন।  নিচের কোডটি লিখুন:package com.example.jsonarrayexample;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonArrayRequest;import com.android.volley.toolbox.Volley;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;public class MainActivity extends AppCompatActivity {    private Button btnFetchData;    private TextView tvResult;    private RequestQueue requestQueue;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // Initialize views        btnFetchData = findViewById(R.id.btnFetchData);        tvResult = findViewById(R.id.tvResult);        // Initialize Volley RequestQueue        requestQueue = Volley.newRequestQueue(this);        // Set click listener for the button        btnFetchData.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                fetchDataFromServer();            }        });    }    private void fetchDataFromServer() {        String url = \"https://jsonplaceholder.typicode.com/users\"; // Sample API URL        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(                Request.Method.GET,                url,                null,                new Response.Listener&lt;JSONArray&gt;() {                    @Override                    public void onResponse(JSONArray response) {                        try {                            StringBuilder result = new StringBuilder();                            // Loop through the JSONArray                            for (int i = 0; i &lt; response.length(); i++) {                                JSONObject jsonObject = response.getJSONObject(i);                                // Extract data from each JSONObject                                int id = jsonObject.getInt(\"id\");                                String name = jsonObject.getString(\"name\");                                String email = jsonObject.getString(\"email\");                                // Append data to the result                                result.append(\"ID: \").append(id)                                        .append(\"\\nName: \").append(name)                                        .append(\"\\nEmail: \").append(email)                                        .append(\"\\n\\n\");                            }                            // Set the result to TextView                            tvResult.setText(result.toString());                        } catch (JSONException e) {                            e.printStackTrace();                            Toast.makeText(MainActivity.this, \"Error parsing JSON\", Toast.LENGTH_SHORT).show();                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Toast.makeText(MainActivity.this, \"Error fetching data\", Toast.LENGTH_SHORT).show();                    }                }        );        // Add the request to the RequestQueue        requestQueue.add(jsonArrayRequest);    }}স্টেপ ৫: কোডের ব্যাখ্যা  Volley RequestQueue: এটি একটি কিউ যা আমাদের HTTP রিকোয়েস্ট প্রসেস করে।  JsonArrayRequest: এটি একটি JSONArray রিকোয়েস্ট করার জন্য ব্যবহৃত হয়।  Looping Through JSONArray: আমরা for লুপ ব্যবহার করে JSONArray-এর প্রতিটি উপাদানকে পার্স করেছি।  Setting Data to TextView: পার্স করা ডেটা আমরা StringBuilder ব্যবহার করে একটি স্ট্রিং-এ রূপান্তর করেছি এবং সেটি TextView-এ সেট করেছি।স্টেপ ৬: অ্যাপ রান করুন  একটি এমুলেটর বা ফিজিক্যাল ডিভাইসে অ্যাপটি রান করুন।  Fetch Data বাটনে ক্লিক করুন।  ডেটা লোড হওয়ার পর টেক্সটভিউতে ডেটা দেখানো হবে।  এই পোস্টে আমরা দেখেছি কিভাবে Android Studio-তে Volley Library ব্যবহার করে JSONArray রিকোয়েস্ট করা যায় এবং সেই ডেটা পার্স করে টেক্সটভিউতে দেখানো যায়। এটি একটি খুবই গুরুত্বপূর্ণ টপিক যা আপনার অ্যাপে ডেটা লোড করতে সাহায্য করবে।"
  },
  
  {
    "title": "Class 254- JSON Array তৈরি করার পদ্ধতি (বাংলায়)",
    "url": "/json-array-creation",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "JSON Array হলো একটি ডেটা স্ট্রাকচার যা একটি অ্যারের মতো কাজ করে। এটি একটি ব্র্যাকেট ([]) দিয়ে শুরু হয় এবং এর ভিতরে এক বা একাধিক JSON অবজেক্ট থাকতে পারে। আমরা এখানে একটি JSON Array তৈরি করব এবং An...",
    "content": "JSON Array হলো একটি ডেটা স্ট্রাকচার যা একটি অ্যারের মতো কাজ করে। এটি একটি ব্র্যাকেট ([]) দিয়ে শুরু হয় এবং এর ভিতরে এক বা একাধিক JSON অবজেক্ট থাকতে পারে। আমরা এখানে একটি JSON Array তৈরি করব এবং Android Studio-তে Volley ব্যবহার করে এই ডেটা লোড করব।প্রথম ধাপ: JSON Array তৈরি করাআমরা একটি JSON Array তৈরি করব যা কিছু ভিডিও ডেটা ধারণ করবে।[    {        \"videoTitle\": \"Add Demo Title 1\",        \"videoID\": \"12345\"    },    {        \"videoTitle\": \"Add Demo Title 2\",        \"videoID\": \"67890\"    },    {        \"videoTitle\": \"Add Demo Title 3\",        \"videoID\": \"11223\"    },    {        \"videoTitle\": \"Add Demo Title 4\",        \"videoID\": \"33445\"    },    {        \"videoTitle\": \"Add Demo Title 5\",        \"videoID\": \"55667\"    }]এটি একটি JSON Array, যা পাঁচটি JSON অবজেক্ট ধারণ করে।দ্বিতীয় ধাপ: Android Studio-তে প্রজেক্ট সেটআপ করা  Android Studio খুলুন এবং একটি নতুন প্রজেক্ট তৈরি করুন।  build.gradle (Module: app) ফাইলে গিয়ে নিচের লাইব্রেরি যোগ করুন:    implementation 'com.android.volley:volley:1.2.1'        তারপর Sync Now ক্লিক করুন।  তৃতীয় ধাপ: XML লেআউট তৈরি করাres/layout/activity_main.xml ফাইলে নিচের কোড যোগ করুন:&lt;LinearLayout    xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:orientation=\"vertical\"    android:padding=\"16dp\"&gt;    &lt;TextView        android:id=\"@+id/textViewResult\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"Loading...\"        android:textSize=\"18sp\" /&gt;&lt;/LinearLayout&gt;এখানে একটি TextView আছে যেখানে আমরা JSON ডেটা দেখাব।চতুর্থ ধাপ: Java কোড লেখাMainActivity.java ফাইলে নিচের কোড যোগ করুন:package com.example.jsonarraydemo;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.widget.TextView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonArrayRequest;import com.android.volley.toolbox.Volley;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;public class MainActivity extends AppCompatActivity {    private TextView textViewResult;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        textViewResult = findViewById(R.id.textViewResult);        // JSON URL (Localhost বা Live Server)        String url = \"https://example.com/data.json\"; // Replace with your JSON file URL        // Volley RequestQueue        RequestQueue queue = Volley.newRequestQueue(this);        // JSON Array Request        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(                Request.Method.GET,                url,                null,                new Response.Listener&lt;JSONArray&gt;() {                    @Override                    public void onResponse(JSONArray response) {                        try {                            StringBuilder result = new StringBuilder();                            for (int i = 0; i &lt; response.length(); i++) {                                JSONObject video = response.getJSONObject(i);                                String videoTitle = video.getString(\"videoTitle\");                                String videoID = video.getString(\"videoID\");                                result.append(\"Title: \").append(videoTitle).append(\"\\n\");                                result.append(\"ID: \").append(videoID).append(\"\\n\\n\");                            }                            textViewResult.setText(result.toString());                        } catch (JSONException e) {                            e.printStackTrace();                            Toast.makeText(MainActivity.this, \"Error parsing JSON\", Toast.LENGTH_SHORT).show();                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Toast.makeText(MainActivity.this, \"Error fetching data\", Toast.LENGTH_SHORT).show();                    }                }        );        // Add the request to the RequestQueue        queue.add(jsonArrayRequest);    }}পঞ্চম ধাপ: JSON ফাইল হোস্ট করা  আপনার JSON ডেটা একটি ফাইলে সেভ করুন (যেমন data.json)।  এটি আপনার সার্ভারে হোস্ট করুন (যেমন Firebase Hosting, GitHub Pages, বা Localhost)।  URL টি কোডে যোগ করুন।ষষ্ঠ ধাপ: অ্যাপ রান করা  আপনার অ্যাপ রান করুন।  অ্যাপটি JSON ডেটা লোড করবে এবং TextView-এ দেখাবে।ফলাফলআপনি দেখতে পাবেন যে সবগুলো ভিডিও টাইটেল এবং ID TextView-এ দেখানো হয়েছে। যদি কোনো ত্রুটি হয়, তাহলে তা Toast মেসেজ হিসেবে দেখানো হবে।সারসংক্ষেপ  JSON Array তৈরি করুন।  Android Studio-তে Volley লাইব্রেরি যোগ করুন।  JSON ডেটা লোড করুন এবং TextView-এ দেখান।  এই পদক্ষেপগুলো অনুসরণ করলে আপনি সহজেই JSON Array ব্যবহার করতে পারবেন।"
  },
  
  {
    "title": "Class 253- JSON অবজেক্ট পার্স করা এবং ডেটা এক্সট্র্যাক্ট করা",
    "url": "/json-parse",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "এই ক্লাসে আমরা Android অ্যাপে JSON ডেটা পার্স করার পদ্ধতি শিখব। আমরা Volley লাইব্রেরি ব্যবহার করে নেটওয়ার্ক থেকে JSON ডেটা ফেচ করব এবং সেখান থেকে নাম, মোবাইল, ইমেইল, ঠিকানা ইত্যাদি ডেটা এক্সট্র্যাক...",
    "content": "এই ক্লাসে আমরা Android অ্যাপে JSON ডেটা পার্স করার পদ্ধতি শিখব। আমরা Volley লাইব্রেরি ব্যবহার করে নেটওয়ার্ক থেকে JSON ডেটা ফেচ করব এবং সেখান থেকে নাম, মোবাইল, ইমেইল, ঠিকানা ইত্যাদি ডেটা এক্সট্র্যাক্ট করব।Volley লাইব্রেরি ব্যবহার করে JSON পার্সিংVolley কি?Volley হল Android-এর একটি HTTP লাইব্রেরি, যা নেটওয়ার্ক রিকোয়েস্ট এবং রেসপন্স হ্যান্ডেলিং সহজ করে। এটি JSON ডেটা পার্স করার জন্য খুবই জনপ্রিয়।স্টেপ ১: প্রোজেক্টে Volley যোগ করাআপনার build.gradle (Module: app) ফাইলে Volley ডিপেন্ডেন্সি যোগ করুন:dependencies {    implementation 'com.android.volley:volley:1.2.1'}সিঙ্ক করুন এবং প্রোজেক্ট রিবিল্ড করুন।স্টেপ ২: ইন্টারনেট পারমিশন যোগ করাআপনার AndroidManifest.xml ফাইলে ইন্টারনেট পারমিশন যোগ করুন:&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;স্টেপ ৩: JSON ডেটা ফেচ এবং পার্স করার কোডনিচের উদাহরণে আমরা একটি JSON অবজেক্ট ফেচ করব এবং সেখান থেকে নাম, মোবাইল, ইমেইল, ঠিকানা ইত্যাদি ডেটা এক্সট্র্যাক্ট করব।JSON উদাহরণ:{  \"name\": \"আবুল\",  \"mobile\": \"01234567890\",  \"email\": \"abul@example.com\",  \"address\": \"ঢাকা, বাংলাদেশ\"}MainActivity.java:package com.example.jsonparsing;import android.os.Bundle;import android.util.Log;import android.widget.TextView;import androidx.appcompat.app.AppCompatActivity;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonObjectRequest;import com.android.volley.toolbox.Volley;import org.json.JSONException;import org.json.JSONObject;public class MainActivity extends AppCompatActivity {    private TextView nameTextView, mobileTextView, emailTextView, addressTextView;    private RequestQueue requestQueue;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // TextView ইনিশিয়ালাইজ করা        nameTextView = findViewById(R.id.nameTextView);        mobileTextView = findViewById(R.id.mobileTextView);        emailTextView = findViewById(R.id.emailTextView);        addressTextView = findViewById(R.id.addressTextView);        // Volley রিকোয়েস্ট কিউ তৈরি করা        requestQueue = Volley.newRequestQueue(this);        // JSON ডেটা ফেচ করার URL        String url = \"https://example.com/api/user\"; // আপনার API URL এখানে বসান        // JSON রিকোয়েস্ট তৈরি করা        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(                Request.Method.GET, url, null,                new Response.Listener&lt;JSONObject&gt;() {                    @Override                    public void onResponse(JSONObject response) {                        try {                            // JSON থেকে ডেটা এক্সট্র্যাক্ট করা                            String name = response.getString(\"name\");                            String mobile = response.getString(\"mobile\");                            String email = response.getString(\"email\");                            String address = response.getString(\"address\");                            // TextView-এ ডেটা সেট করা                            nameTextView.setText(\"নাম: \" + name);                            mobileTextView.setText(\"মোবাইল: \" + mobile);                            emailTextView.setText(\"ইমেইল: \" + email);                            addressTextView.setText(\"ঠিকানা: \" + address);                        } catch (JSONException e) {                            e.printStackTrace();                            Log.e(\"JSON Parsing Error\", e.getMessage());                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Log.e(\"Volley Error\", error.toString());                    }                }        );        // রিকোয়েস্ট কিউ-তে রিকোয়েস্ট যোগ করা        requestQueue.add(jsonObjectRequest);    }}স্টেপ ৪: লেআউট ফাইল তৈরি করাactivity_main.xml ফাইলে নিচের কোড যোগ করুন:&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:orientation=\"vertical\"    android:padding=\"16dp\"&gt;    &lt;TextView        android:id=\"@+id/nameTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"নাম: \"        android:textSize=\"18sp\"        android:layout_marginBottom=\"8dp\"/&gt;    &lt;TextView        android:id=\"@+id/mobileTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"মোবাইল: \"        android:textSize=\"18sp\"        android:layout_marginBottom=\"8dp\"/&gt;    &lt;TextView        android:id=\"@+id/emailTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"ইমেইল: \"        android:textSize=\"18sp\"        android:layout_marginBottom=\"8dp\"/&gt;    &lt;TextView        android:id=\"@+id/addressTextView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:text=\"ঠিকানা: \"        android:textSize=\"18sp\"/&gt;&lt;/LinearLayout&gt;স্টেপ ৫: অ্যাপ রান করা  আপনার API URL সঠিকভাবে সেট করুন।  অ্যাপ রান করুন এবং JSON ডেটা ফেচ করে UI-তে দেখান।সারমর্ম  Volley ব্যবহার করে Android অ্যাপে JSON ডেটা ফেচ করা খুবই সহজ।  JsonObjectRequest দিয়ে JSON অবজেক্ট পার্স করা যায়।  JSON থেকে ডেটা এক্সট্র্যাক্ট করে UI-তে দেখানো যায়।  এই ক্লাসে আমরা Android-এ JSON পার্সিং শিখলাম। পরবর্তী ক্লাসে আমরা JSON অ্যারে পার্সিং শিখব। 😊"
  },
  
  {
    "title": "Class 252- JSON ফাইল ফরম্যাট এবং JSON অবজেক্ট ও অ্যারে বোঝা",
    "url": "/json-format",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "JSON কি?JSON (JavaScript Object Notation) হল একটি হালকা ডেটা ইন্টারচেঞ্জ ফরম্যাট, যা মানুষের পড়া এবং লেখা সহজ এবং মেশিনের পার্স ও জেনারেট করা সহজ। এটি মূলত টেক্সট ফরম্যাটে ডেটা স্ট্রাকচার এবং অবজেক...",
    "content": "JSON কি?JSON (JavaScript Object Notation) হল একটি হালকা ডেটা ইন্টারচেঞ্জ ফরম্যাট, যা মানুষের পড়া এবং লেখা সহজ এবং মেশিনের পার্স ও জেনারেট করা সহজ। এটি মূলত টেক্সট ফরম্যাটে ডেটা স্ট্রাকচার এবং অবজেক্ট রিপ্রেজেন্ট করে। JSON সাধারণত ওয়েব অ্যাপ্লিকেশনে সার্ভার এবং ক্লায়েন্টের মধ্যে ডেটা ট্রান্সফার করতে ব্যবহৃত হয়।JSON ফাইল ফরম্যাটJSON ফাইল .json এক্সটেনশন দিয়ে সেভ করা হয়। এটি একটি টেক্সট ফাইল, যেখানে ডেটা কী-ভ্যালু পেয়ার এবং অ্যারে ফরম্যাটে সাজানো থাকে।উদাহরণ:{  \"name\": \"আবুল\",  \"age\": 30,  \"city\": \"ঢাকা\",  \"isStudent\": false,  \"skills\": [\"JavaScript\", \"Python\", \"SQL\"]}JSON অবজেক্টJSON অবজেক্ট হল কার্লি ব্র্যাকেট {} দিয়ে আবদ্ধ ডেটা স্ট্রাকচার, যেখানে ডেটা কী-ভ্যালু পেয়ার আকারে থাকে।উদাহরণ:{  \"name\": \"আবুল\",  \"age\": 30}  এখানে \"name\" এবং \"age\" হল কী (Key)।  \"আবুল\" এবং 30 হল ভ্যালু (Value)।JSON অ্যারেJSON অ্যারে হল স্কয়ার ব্র্যাকেট [] দিয়ে আবদ্ধ ডেটা স্ট্রাকচার, যেখানে একাধিক ভ্যালু কমা দিয়ে আলাদা করা থাকে।উদাহরণ:[\"আবুল\", \"বাবুল\", \"কাবুল\"]  এখানে তিনটি স্ট্রিং ভ্যালু আছে: \"আবুল\", \"বাবুল\", এবং \"কাবুল\"।JSON অবজেক্ট এবং অ্যারে একসাথেJSON অবজেক্টের ভেতর অ্যারে থাকতে পারে, আবার অ্যারের ভেতর অবজেক্ট থাকতে পারে।উদাহরণ:{  \"name\": \"আবুল\",  \"age\": 30,  \"hobbies\": [\"ক্রিকেট\", \"ফুটবল\", \"গান শোনা\"],  \"address\": {    \"city\": \"ঢাকা\",    \"postalCode\": \"1207\"  }}  \"hobbies\" কী-এর ভ্যালু একটি অ্যারে।  \"address\" কী-এর ভ্যালু একটি অবজেক্ট।JSON এর বৈশিষ্ট্য  কী-ভ্যালু পেয়ার: \"key\": \"value\"  কী সবসময় স্ট্রিং হয় এবং ডাবল কোটেশনে লিখতে হয়।  ভ্যালু হতে পারে স্ট্রিং, নাম্বার, অবজেক্ট, অ্যারে, বুলিয়ান (true/false), বা null।  ডেটা কমা দিয়ে আলাদা করা হয়।JSON ব্যবহারের সুবিধা  সহজে পড়া এবং লেখা যায়।  সব প্রোগ্রামিং ল্যাঙ্গুয়েজ সাপোর্ট করে।  ওয়েব API-তে ডেটা ট্রান্সফারের জন্য আদর্শ।সারমর্ম  JSON হল ডেটা শেয়ার করার একটি সহজ এবং কার্যকরী ফরম্যাট।  JSON অবজেক্ট এবং অ্যারে ব্যবহার করে জটিল ডেটা স্ট্রাকচার তৈরি করা যায়।  এটি ওয়েব ডেভেলপমেন্টে ব্যাপকভাবে ব্যবহৃত হয়।এই ক্লাসে আমরা JSON ফাইল ফরম্যাট, অবজেক্ট, অ্যারে এবং এর ব্যবহার শিখলাম। পরবর্তী ক্লাসে আমরা JSON নিয়ে প্র্যাকটিক্যাল কাজ শিখব। 😊"
  },
  
  {
    "title": "Class 251- Google AdMob Ads সার্ভার রেসপন্সের উপর ভিত্তি করে শো করা",
    "url": "/google-admob-ads-server-response",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "এই ক্লাসে আমরা শিখব কিভাবে সার্ভার থেকে একটি স্ট্রিং রেসপন্স চেক করে AdMob ব্যানার এডস শো বা হাইড করতে হয়। যদি সার্ভার রেসপন্সে \"showADS\" থাকে, তাহলে AdMob ব্যানার এডস শো করব। অন্যথায়, এডস হাইড করব...",
    "content": "এই ক্লাসে আমরা শিখব কিভাবে সার্ভার থেকে একটি স্ট্রিং রেসপন্স চেক করে AdMob ব্যানার এডস শো বা হাইড করতে হয়। যদি সার্ভার রেসপন্সে \"showADS\" থাকে, তাহলে AdMob ব্যানার এডস শো করব। অন্যথায়, এডস হাইড করব।ধাপ 1: AdMob সেটআপ  AdMob অ্যাকাউন্ট তৈরি করুন: AdMob এ একটি অ্যাকাউন্ট তৈরি করুন এবং একটি নতুন অ্যাপ যোগ করুন।      Ad Unit ID সংগ্রহ করুন: AdMob থেকে একটি ব্যানার এডের জন্য Ad Unit ID সংগ্রহ করুন। এটি দেখতে এমন হবে: ca-app-pub-3940256099942544/6300978111 (টেস্টিং এর জন্য)।    AdMob ডিপেন্ডেন্সি যোগ করুন: build.gradle (Module: app) ফাইলে নিচের ডিপেন্ডেন্সি যোগ করুন:dependencies {    implementation 'com.google.android.gms:play-services-ads:22.4.0'}  ইন্টারনেট পারমিশন যোগ করুন: AndroidManifest.xml ফাইলে ইন্টারনেট পারমিশন যোগ করুন:&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;  AdMob অ্যাপ ID যোগ করুন: AndroidManifest.xml ফাইলে AdMob অ্যাপ ID যোগ করুন:&lt;meta-data    android:name=\"com.google.android.gms.ads.APPLICATION_ID\"    android:value=\"ca-app-pub-3940256099942544~3347511713\"/&gt; &lt;!-- টেস্ট অ্যাপ ID --&gt;ধাপ 2: সার্ভার থেকে রেসপন্স চেক করাআমরা ভলি লাইব্রেরি ব্যবহার করে সার্ভার থেকে স্ট্রিং রেসপন্স চেক করব। যদি রেসপন্সে \"showADS\" থাকে, তাহলে AdMob ব্যানার এডস শো করব। অন্যথায়, এডস হাইড করব।সার্ভার PHP ফাইল (test.php):&lt;?phpecho \"showADS\"; // এই লাইন পরিবর্তন করে \"showADS\" বা অন্য কিছু রিটার্ন করুন?&gt;ধাপ 3: অ্যান্ড্রয়েড অ্যাপে ইমপ্লিমেন্টেশন  লেআউট ফাইল (activity_main.xml):&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"&gt;    &lt;!-- AdMob Banner Ad --&gt;    &lt;com.google.android.gms.ads.AdView        android:id=\"@+id/adView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:layout_centerHorizontal=\"true\"        android:layout_alignParentBottom=\"true\"        ads:adSize=\"BANNER\"        ads:adUnitId=\"ca-app-pub-3940256099942544/6300978111\"/&gt; &lt;!-- আপনার Ad Unit ID ব্যবহার করুন --&gt;    &lt;!-- অন্যান্য UI কম্পোনেন্ট --&gt;    &lt;TextView        android:id=\"@+id/textView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:layout_centerInParent=\"true\"        android:text=\"Loading...\"        android:textSize=\"18sp\" /&gt;&lt;/RelativeLayout&gt;  MainActivity.java:import android.os.Bundle;import android.view.View;import android.widget.TextView;import androidx.appcompat.app.AppCompatActivity;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.google.android.gms.ads.AdRequest;import com.google.android.gms.ads.AdView;import com.google.android.gms.ads.MobileAds;import com.google.android.gms.ads.initialization.InitializationStatus;import com.google.android.gms.ads.initialization.OnInitializationCompleteListener;public class MainActivity extends AppCompatActivity {    private TextView textView;    private AdView adView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // UI কম্পোনেন্ট ইনিশিয়ালাইজ করুন        textView = findViewById(R.id.textView);        adView = findViewById(R.id.adView);        // AdMob ইনিশিয়ালাইজ করুন        MobileAds.initialize(this, new OnInitializationCompleteListener() {            @Override            public void onInitializationComplete(InitializationStatus initializationStatus) {                // AdMob সফলভাবে ইনিশিয়ালাইজ হলে এই মেথড কল হবে            }        });        // ভলি রিকুয়েস্ট কিউ তৈরি করুন        RequestQueue queue = Volley.newRequestQueue(this);        // সার্ভারের URL        String url = \"https://example.com/test.php\";        // স্ট্রিং রিকুয়েস্ট তৈরি করুন        StringRequest stringRequest = new StringRequest(Request.Method.GET, url,                new Response.Listener&lt;String&gt;() {                    @Override                    public void onResponse(String response) {                        // সার্ভার থেকে রেসপন্স পেলে এই মেথড কল হবে                        textView.setText(response);                        // রেসপন্স চেক করুন                        if (response.contains(\"showADS\")) {                            // AdMob ব্যানার এডস শো করুন                            adView.setVisibility(View.VISIBLE);                            AdRequest adRequest = new AdRequest.Builder().build();                            adView.loadAd(adRequest);                        } else {                            // AdMob ব্যানার এডস হাইড করুন                            adView.setVisibility(View.GONE);                        }                    }                }, new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        // কোনো এরর হলে এই মেথড কল হবে                        textView.setText(\"Error: \" + error.getMessage());                    }                });        // রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুন        queue.add(stringRequest);    }}ধাপ 4: অ্যাপ রান করুন  সার্ভার থেকে \"showADS\" রেসপন্স পেলে AdMob ব্যানার এডস শো হবে।  যদি সার্ভার রেসপন্সে \"showADS\" না থাকে, তাহলে AdMob ব্যানার এডস হাইড হবে।ব্যাখ্যা:  AdMob সেটআপ: AdMob ব্যানার এডস ব্যবহার করার জন্য প্রয়োজনীয় সেটআপ করা হয়েছে।  ভলি রিকুয়েস্ট: ভলি লাইব্রেরি ব্যবহার করে সার্ভার থেকে স্ট্রিং রেসপন্স চেক করা হয়েছে।  রেসপন্স চেক: সার্ভার রেসপন্সে \"showADS\" থাকলে AdMob ব্যানার এডস শো করা হয়েছে, অন্যথায় হাইড করা হয়েছে।  এই গাইডটি অনুসরণ করে আপনি সহজেই সার্ভার রেসপন্সের উপর ভিত্তি করে AdMob এডস শো বা হাইড করতে পারবেন।"
  },
  
  {
    "title": "Class 250- সার্ভার থেকে ডেটা পার্সিং ভলি লাইব্রেরি ব্যবহার করে",
    "url": "/class-250-parsing-data-from-server",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "এই ক্লাসে আমরা শিখব কিভাবে একটি সাধারণ PHP ফাইল তৈরি করে সেখান থেকে ডেটা রিট্রিভ করতে হয় এবং অ্যান্ড্রয়েড অ্যাপে ভলি লাইব্রেরি ব্যবহার করে সেই ডেটা ডিসপ্লে করতে হয়। আমরা একটি সহজ PHP ফাইল তৈরি করব ...",
    "content": "এই ক্লাসে আমরা শিখব কিভাবে একটি সাধারণ PHP ফাইল তৈরি করে সেখান থেকে ডেটা রিট্রিভ করতে হয় এবং অ্যান্ড্রয়েড অ্যাপে ভলি লাইব্রেরি ব্যবহার করে সেই ডেটা ডিসপ্লে করতে হয়। আমরা একটি সহজ PHP ফাইল তৈরি করব যা “Hello World This is a Test Text For” এই টেক্সটটি রিটার্ন করবে এবং অ্যান্ড্রয়েড অ্যাপে ভলি লাইব্রেরি ব্যবহার করে এই টেক্সটটি রিট্রিভ করব।Step 1: সার্ভারে PHP ফাইল তৈরি করাপ্রথমে আমাদের সার্ভারে একটি PHP ফাইল তৈরি করতে হবে। এই ফাইলটি একটি সাধারণ টেক্সট রিটার্ন করবে।&lt;?php// এই PHP ফাইলটি একটি সাধারণ টেক্সট রিটার্ন করেecho \"Hello World This is a Test Text For\";?&gt;এই কোডটি সার্ভারে test.php নামে সেভ করুন। উদাহরণস্বরূপ, যদি আপনার সার্ভারের এড্রেস হয় https://example.com, তাহলে এই ফাইলটি এক্সেস করার এড্রেস হবে https://example.com/test.php।Step 2: অ্যান্ড্রয়েড প্রজেক্ট সেটআপ  নতুন প্রজেক্ট তৈরি করুন: অ্যান্ড্রয়েড স্টুডিওতে একটি নতুন প্রজেক্ট তৈরি করুন।  ভলি লাইব্রেরি যোগ করুন: build.gradle (Module: app) ফাইলে নিচের ডিপেন্ডেন্সি যোগ করুন:dependencies {    implementation 'com.android.volley:volley:1.2.1'}  ইন্টারনেট পারমিশন যোগ করুন: AndroidManifest.xml ফাইলে ইন্টারনেট পারমিশন যোগ করুন:&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;  Read More:  Volley - ভলি লাইব্রেরিতে রিকুয়েস্টের প্রকারভেদStep 3: ভলি লাইব্রেরি ব্যবহার করে ডেটা রিট্রিভ করাএখন আমরা অ্যান্ড্রয়েড অ্যাপে ভলি লাইব্রেরি ব্যবহার করে সার্ভার থেকে ডেটা রিট্রিভ করব।import android.os.Bundle;import android.widget.TextView;import androidx.appcompat.app.AppCompatActivity;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;public class MainActivity extends AppCompatActivity {    // UI কম্পোনেন্ট ডিক্লেয়ার করুন    private TextView textView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // TextView ইনিশিয়ালাইজ করুন        textView = findViewById(R.id.textView);        // ভলি রিকুয়েস্ট কিউ তৈরি করুন        RequestQueue queue = Volley.newRequestQueue(this);        // সার্ভারের URL        String url = \"https://example.com/test.php\";        // স্ট্রিং রিকুয়েস্ট তৈরি করুন        StringRequest stringRequest = new StringRequest(Request.Method.GET, url,                new Response.Listener&lt;String&gt;() {                    @Override                    public void onResponse(String response) {                        // সার্ভার থেকে রেসপন্স পেলে এই মেথড কল হবে                        textView.setText(response); // রেসপন্স টেক্সট ভিউতে সেট করুন                    }                }, new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        // কোনো এরর হলে এই মেথড কল হবে                        textView.setText(\"Error: \" + error.getMessage());                    }                });        // রিকুয়েস্ট কিউতে রিকুয়েস্ট যোগ করুন        queue.add(stringRequest);    }}Step 4: লেআউট ফাইল তৈরি করুনactivity_main.xml ফাইলে একটি TextView যোগ করুন যেখানে সার্ভার থেকে রিট্রিভ করা ডেটা ডিসপ্লে হবে।&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"&gt;    &lt;TextView        android:id=\"@+id/textView\"        android:layout_width=\"wrap_content\"        android:layout_height=\"wrap_content\"        android:layout_centerInParent=\"true\"        android:text=\"Loading...\"        android:textSize=\"18sp\" /&gt;&lt;/RelativeLayout&gt;Step 5: অ্যাপ রান করুনএখন অ্যাপটি রান করুন। যদি সবকিছু সঠিকভাবে সেটআপ করা হয়, তাহলে অ্যাপটি সার্ভার থেকে “Hello World This is a Test Text For” এই টেক্সটটি রিট্রিভ করে স্ক্রিনে ডিসপ্লে করবে।ব্যাখ্যা:  PHP ফাইল: সার্ভারে একটি PHP ফাইল তৈরি করা হয়েছে যা একটি সাধারণ টেক্সট রিটার্ন করে।  ভলি লাইব্রেরি: অ্যান্ড্রয়েড অ্যাপে ভলি লাইব্রেরি ব্যবহার করে সার্ভার থেকে ডেটা রিট্রিভ করা হয়েছে।  StringRequest: এটি একটি HTTP রিকুয়েস্ট যা সার্ভার থেকে স্ট্রিং ডেটা রিট্রিভ করে।  RequestQueue: এটি ভলি লাইব্রেরির একটি কম্পোনেন্ট যা রিকুয়েস্ট ম্যানেজ করে।  UI আপডেট: সার্ভার থেকে রিট্রিভ করা ডেটা TextView-এ ডিসপ্লে করা হয়েছে।  এই ক্লাসটি অনুসরণ করে আপনি সহজেই সার্ভার থেকে ডেটা রিট্রিভ করতে পারবেন এবং অ্যান্ড্রয়েড অ্যাপে ডিসপ্লে করতে পারবেন। ভলি লাইব্রেরি ব্যবহার করে নেটওয়ার্ক অপারেশন করা খুবই সহজ এবং এফিসিয়েন্ট।"
  },
  
  {
    "title": "Class 249- Hello World & Variable Declaration in PHP (ব্যাখ্যা বাংলায়)",
    "url": "/class-249-hello-world-and-variable-declaration-in-php",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "PHP একটি সার্ভার-সাইড স্ক্রিপ্টিং ল্যাঙ্গুয়েজ, যা ওয়েব ডেভেলপমেন্টের জন্য ব্যাপকভাবে ব্যবহৃত হয়। আজকের ক্লাসে আমরা PHP তে Hello World প্রিন্ট করা এবং ভেরিয়েবল ডিক্লেয়ার (Variable Declaration) ...",
    "content": "PHP একটি সার্ভার-সাইড স্ক্রিপ্টিং ল্যাঙ্গুয়েজ, যা ওয়েব ডেভেলপমেন্টের জন্য ব্যাপকভাবে ব্যবহৃত হয়। আজকের ক্লাসে আমরা PHP তে Hello World প্রিন্ট করা এবং ভেরিয়েবল ডিক্লেয়ার (Variable Declaration) শিখব।১. Hello World প্রিন্ট করা:PHP তে কোনো কিছু প্রিন্ট করার জন্য echo বা print ব্যবহার করা হয়। নিচের উদাহরণটি দেখুন:&lt;?php    echo \"Hello World!\";?&gt;ব্যাখ্যা:  &lt;?php এবং ?&gt; হলো PHP কোডের শুরু এবং শেষ। এর ভিতরে PHP কোড লিখতে হয়।  echo হলো একটি PHP স্টেটমেন্ট, যা টেক্সট বা ভেরিয়েবলের মান প্রিন্ট করে।  \"Hello World!\" হলো একটি স্ট্রিং, যা আমরা প্রিন্ট করতে চাই।এই কোডটি রান করলে আউটপুট হবে:Hello World!২. ভেরিয়েবল ডিক্লেয়ার (Variable Declaration):PHP তে ভেরিয়েবল ডিক্লেয়ার করতে $ চিহ্ন ব্যবহার করা হয়। ভেরিয়েবলের নাম ইংরেজি অক্ষর বা আন্ডারস্কোর (_) দিয়ে শুরু করতে হয়। নিচের উদাহরণটি দেখুন:&lt;?php    $name = \"John Doe\"; // স্ট্রিং ভেরিয়েবল    $age = 25;          // ইন্টিজার ভেরিয়েবল    $price = 99.99;     // ফ্লোট ভেরিয়েবল    echo \"Name: \" . $name . \"&lt;br&gt;\";    echo \"Age: \" . $age . \"&lt;br&gt;\";    echo \"Price: \" . $price;?&gt;ব্যাখ্যা:  $name, $age, এবং $price হলো তিনটি ভেরিয়েবল।  = চিহ্ন ব্যবহার করে ভেরিয়েবলে মান অ্যাসাইন করা হয়।  echo ব্যবহার করে ভেরিয়েবলের মান প্রিন্ট করা হয়।  . (ডট) অপারেটর ব্যবহার করে স্ট্রিং এবং ভেরিয়েবল কনক্যাটেনেট (জোড়া) করা হয়।  &lt;br&gt; হলো HTML ট্যাগ, যা লাইন ব্রেক করে।এই কোডটি রান করলে আউটপুট হবে:Name: John DoeAge: 25Price: 99.99৩. ভেরিয়েবলের নিয়ম:  ভেরিয়েবলের নাম ইংরেজি অক্ষর বা _ দিয়ে শুরু করতে হবে। যেমন: $name, $_age।  ভেরিয়েবলের নাম কেস-সেনসিটিভ। অর্থাৎ $Name এবং $name আলাদা।  ভেরিয়েবলে বিভিন্ন ডাটা টাইপ (স্ট্রিং, ইন্টিজার, ফ্লোট ইত্যাদি) স্টোর করা যায়।  এই ছিল আজকের ক্লাসে PHP তে Hello World প্রিন্ট করা এবং ভেরিয়েবল ডিক্লেয়ার সম্পর্কে মৌলিক ধারণা। পরবর্তী ক্লাসে আমরা PHP তে ডাটা টাইপ এবং অপারেটর নিয়ে আলোচনা করব। Happy Coding! 😊"
  },
  
  {
    "title": "Class 248- সার্ভার, এপিআই এবং ডেটাবেস",
    "url": "/class-248-server-and-api",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 09:37:41 +0600",
    





    
    "snippet": "সার্ভার (Server)ধরুন, আপনি একটা লাইব্রেরিতে গেলেন বই খোঁজার জন্য। লাইব্রেরিটা হচ্ছে সার্ভার, আর আপনি হচ্ছেন ক্লায়েন্ট (Client)। লাইব্রেরিতে অনেক বই সাজানো আছে, আপনি যে বইটি চান, লাইব্রেরিয়ান (Libra...",
    "content": "সার্ভার (Server)ধরুন, আপনি একটা লাইব্রেরিতে গেলেন বই খোঁজার জন্য। লাইব্রেরিটা হচ্ছে সার্ভার, আর আপনি হচ্ছেন ক্লায়েন্ট (Client)। লাইব্রেরিতে অনেক বই সাজানো আছে, আপনি যে বইটি চান, লাইব্রেরিয়ান (Librarian) আপনাকে সেটা খুঁজে বের করে দেন।কম্পিউটারের ক্ষেত্রেও একই রকম। সার্ভার হলো একটা শক্তিশালী কম্পিউটার, যেখানে অনেক ডেটা (যেমন - ছবি, ভিডিও, টেক্সট) এবং প্রোগ্রাম রাখা থাকে। যখন আপনি আপনার কম্পিউটার বা মোবাইল থেকে কোনো ওয়েবসাইট দেখেন, তখন আপনি আসলে সার্ভারের কাছে সেই ওয়েবসাইটের ডেটা চাইছেন। সার্ভার তখন সেই ডেটা আপনাকে পাঠিয়ে দেয়, আর আপনি সেটা আপনার কম্পিউটারে দেখতে পান।সার্ভার সবসময় চালু থাকে, যাতে যে কেউ যখন খুশি ডেটা অ্যাক্সেস করতে পারে। যেমন - ফেসবুক, গুগল, ইউটিউব - এগুলো সবই সার্ভারের মাধ্যমে চলে।এপিআই (API - Application Programming Interface)এপিআই কে আমরা একটা ওয়েটারের (Waiter) সাথে তুলনা করতে পারি। আপনি রেস্টুরেন্টে গিয়ে খাবার অর্ডার করেন, ওয়েটার আপনার অর্ডারটা কিচেনে নিয়ে যায়, তারপর খাবার তৈরি হলে আপনাকে পরিবেশন করে।এপিআইও একই কাজ করে। এটা দুইটা আলাদা প্রোগ্রামের মধ্যে যোগাযোগ স্থাপন করে। ধরুন, আপনি একটা অ্যাপ (App) বানাচ্ছেন, যেখানে আবহাওয়ার তথ্য দরকার। আপনি সরাসরি আবহাওয়ার ডেটা জোগাড় করতে পারবেন না। তখন আপনি একটা এপিআই ব্যবহার করবেন। এই এপিআইটা আবহাওয়ার ডেটা সরবরাহকারীর (Weather Data Provider) সাথে যোগাযোগ করবে, এবং তাদের কাছ থেকে ডেটা নিয়ে আপনার অ্যাপে দেখাবে।এপিআই অনেকটা চুক্তির মতো, যেখানে বলা থাকে কিভাবে ডেটা পাঠাতে হবে, কিভাবে রিকোয়েস্ট করতে হবে, ইত্যাদি।ডেটাবেস (Database)ডেটাবেস হলো তথ্যের ভান্ডার। যেমন - একটা লাইব্রেরিতে অনেক বইয়ের তালিকা থাকে, কোথায় কোন বই আছে, কার কাছে আছে - এই সব তথ্য ডেটাবেসে জমা থাকে।কম্পিউটারের ক্ষেত্রেও একই রকম। ডেটাবেসে বিভিন্ন ধরনের তথ্য (যেমন - নাম, ঠিকানা, ফোন নম্বর, ছবি) সাজানো গোছানো ভাবে রাখা হয়। এই তথ্যগুলো পরে দরকার হলে খুব সহজেই খুঁজে বের করা যায়।অনেক ধরনের ডেটাবেস আছে, যেমন - MySQL, PostgreSQL, MongoDB। প্রত্যেকটা ডেটাবেসের নিজস্ব বৈশিষ্ট্য আছে।সারসংক্ষেপ (Summary)  সার্ভার: একটা শক্তিশালী কম্পিউটার, যেখানে ডেটা ও প্রোগ্রাম রাখা থাকে।  এপিআই: দুইটা প্রোগ্রামের মধ্যে যোগাযোগের মাধ্যম।  ডেটাবেস: তথ্যের ভান্ডার, যেখানে ডেটা সাজানো গোছানো ভাবে রাখা হয়।  আশা করি, এই সহজ ব্যাখ্যা দিয়ে আপনারা সার্ভার, এপিআই এবং ডেটাবেস সম্পর্কে একটা প্রাথমিক ধারণা পেয়েছেন। আরও বিস্তারিত জানার জন্য, আপনাকে আরও পড়াশোনা করতে হবে এবং প্র্যাকটিস করতে হবে। শুভকামনা!"
  },
  
  {
    "title": "Class 259- মাইএসকিউএল (MySQL) ডেটাবেস ব্যবহার করা",
    "url": "/mysq-database",
    "categories": "Android Studio Server & API",
    "tags": "Android Studio Server & API",
    "date": "2025-01-31 06:45:00 +0600",
    





    
    "snippet": "আসসালামু আলাইকুম! আজকের পোস্টে আমরা জানব কিভাবে একটি মাইএসকিউএল (MySQL) ডেটাবেস ব্যবহার করতে হয় এবং কিভাবে নিজের ডেটাবেস টেবিল তৈরি করতে হয়। এই টিউটোরিয়ালটি নতুনদের জন্য তৈরি করা হয়েছে, তাই আমি...",
    "content": "আসসালামু আলাইকুম! আজকের পোস্টে আমরা জানব কিভাবে একটি মাইএসকিউএল (MySQL) ডেটাবেস ব্যবহার করতে হয় এবং কিভাবে নিজের ডেটাবেস টেবিল তৈরি করতে হয়। এই টিউটোরিয়ালটি নতুনদের জন্য তৈরি করা হয়েছে, তাই আমি সহজ ভাষায় এবং বাস্তব জীবনের উদাহরণ দিয়ে ব্যাখ্যা করব।মাইএসকিউএল (MySQL) কী?মাইএসকিউএল হল একটি ডেটাবেস ম্যানেজমেন্ট সিস্টেম (DBMS)। এটি একটি শক্তিশালী ওপেন-সোর্স সফটওয়্যার যা ডেটা সংগ্রহ, সংরক্ষণ এবং পরিচালনা করতে ব্যবহৃত হয়। ধরুন, আপনি একটি দোকানের মালিক। আপনার দোকানে অনেক গ্রাহক আসে, তাদের তথ্য সংরক্ষণ করতে হবে। এখানেই MySQL আপনাকে সাহায্য করবে।বাস্তব জীবনের উদাহরণধরুন, আপনি একটি স্কুলের অফিস সহকারী। আপনার কাছে স্কুলের সকল শিক্ষার্থীদের তথ্য সংরক্ষণ করতে হবে। এই তথ্যগুলো হতে পারে:  শিক্ষার্থীর নাম  রোল নম্বর  বয়স  ক্লাস  ঠিকানাএই তথ্যগুলো আপনি কাগজে লিখে রাখতে পারেন, কিন্তু এতে সমস্যা হল ডেটা খুঁজে পাওয়া বা আপডেট করা কঠিন হয়ে যায়। এই সমস্যা সমাধানের জন্য MySQL ব্যবহার করা হয়।মাইএসকিউএল ডেটাবেস কিভাবে কাজ করে?মাইএসকিউএল ডেটাবেসে ডেটা সংরক্ষণ করা হয় টেবিলের মাধ্যমে। টেবিল হল একটি গ্রিড বা চার্ট, যেখানে প্রতিটি সারি একটি রেকর্ড এবং প্রতিটি কলাম একটি বৈশিষ্ট্য নির্দেশ করে।উদাহরণস্বরূপ, আপনার স্কুলের শিক্ষার্থীদের তথ্য সংরক্ষণের জন্য একটি টেবিল তৈরি করতে পারেন যা এরকম হতে পারে:            নাম      রোল নম্বর      বয়স      ক্লাস      ঠিকানা                  রহিম      101      12      7      ঢাকা              করিম      102      13      8      চট্টগ্রাম              সাবরিনা      103      14      9      সিলেট      এই টেবিলটি আপনি MySQL ডেটাবেসে সংরক্ষণ করতে পারেন।MySQL ডেটাবেস তৈরি করাMySQL ডেটাবেস তৈরি করতে হলে আপনাকে নিচের ধাপগুলো অনুসরণ করতে হবে:ধাপ ১: MySQL ইনস্টল করুনপ্রথমে আপনার কম্পিউটারে MySQL ইনস্টল করতে হবে। ইনস্টল করার পর আপনি MySQL Workbench বা টার্মিনাল ব্যবহার করতে পারেন।ধাপ ২: ডেটাবেস তৈরি করুনMySQL-এ ডেটাবেস তৈরি করতে নিচের কমান্ডটি ব্যবহার করুন:CREATE DATABASE school_database;এখানে school_database হল আপনার ডেটাবেসের নাম। আপনি যেকোনো নাম দিতে পারেন।ধাপ ৩: ডেটাবেস ব্যবহার করুনডেটাবেস তৈরি করার পর আপনাকে সেটি ব্যবহার করতে হবে। এজন্য নিচের কমান্ডটি ব্যবহার করুন:USE school_database;ধাপ ৪: টেবিল তৈরি করুনএখন আপনি আপনার স্কুলের শিক্ষার্থীদের তথ্য সংরক্ষণের জন্য একটি টেবিল তৈরি করতে পারেন। নিচের কমান্ডটি ব্যবহার করুন:CREATE TABLE students (    id INT AUTO_INCREMENT PRIMARY KEY,    name VARCHAR(50),    roll_number INT,    age INT,    class_name VARCHAR(20),    address VARCHAR(100));এখানে:  id: প্রতিটি শিক্ষার্থীর জন্য একটি অনন্য আইডি।  name: শিক্ষার্থীর নাম।  roll_number: শিক্ষার্থীর রোল নম্বর।  age: শিক্ষার্থীর বয়স।  class_name: শিক্ষার্থীর ক্লাস।  address: শিক্ষার্থীর ঠিকানা।ধাপ ৫: ডেটা ইনসার্ট করুনটেবিল তৈরি করার পর আপনি ডেটা ইনসার্ট করতে পারেন। নিচের কমান্ডটি ব্যবহার করুন:INSERT INTO students (name, roll_number, age, class_name, address)VALUES ('রহিম', 101, 12, 'সপ্তম', 'ঢাকা');এভাবে আরও ডেটা ইনসার্ট করতে পারেন।ধাপ ৬: ডেটা দেখুনডেটা দেখতে নিচের কমান্ডটি ব্যবহার করুন:SELECT * FROM students;এটি আপনাকে টেবিলের সকল ডেটা দেখাবে।সারসংক্ষেপআজকের পোস্টে আমরা জেনেছি মাইএসকিউএল কী এবং কিভাবে এটি ব্যবহার করতে হয়। আমরা একটি স্কুলের শিক্ষার্থীদের তথ্য সংরক্ষণের জন্য একটি ডেটাবেস এবং টেবিল তৈরি করেছি। আশা করি এই টিউটোরিয়ালটি আপনার জন্য সহায়ক হবে।"
  }
  
]

